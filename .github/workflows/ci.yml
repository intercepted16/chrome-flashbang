name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  test-and-build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Update cache after installing dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Build project with PyInstaller
        run: |
          pyinstaller --onefile --noconsole --name chrome-no-flash.exe main.py

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: dist/

      - name: Create GitHub Tag
        if: github.ref == 'refs/heads/main' && success()
        id: tag
        run: |
          GIT_TAG=$(date +%Y%m%d%H%M%S)
          echo "GIT_TAG=$GIT_TAG" >> $GITHUB_ENV

      - name: Push Tag
        if: github.ref == 'refs/heads/main' && success()
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git tag ${{ env.GIT_TAG }}
          git push origin ${{ env.GIT_TAG }}
